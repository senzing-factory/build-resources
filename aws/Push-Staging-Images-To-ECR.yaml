---

version: 0.2

phases:

  install:
    commands:

      #- sudo apt-get update
      #- sudo apt-get install -y docker-ce docker-ce-cli \
      #                          containerd.io docker-buildx-plugin \
      #                          docker-compose-plugin qemu-user-static

  pre_build:
    commands:
      - echo "[INFO] Login in to Amazon ECR"
      - aws ecr-public get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin public.ecr.aws
      - |
        if [[ "$PUSH_TO_DOCKERHUB" == "true" ]]; then
          echo "[INFO] Login to dockerhub"
          aws secretsmanager get-secret-value --secret-id $DOCKERHUB_ACCESS_TOKEN | jq -r '.SecretString' | docker login \
            --username $(aws secretsmanager get-secret-value --secret-id $DOCKERHUB_USERNAME) | jq -r '.SecretString' --password-stdin
        else
          echo "[INFO] Skipping dockerhub login"
        fi

  build:
    commands:

      # Build senzingapi-runtime base image
      - |
        env
        echo "[INFO] $CODEBUILD_SRC_DIR_senzingapi_runtime"
        cd $CODEBUILD_SRC_DIR_senzingapi_runtime
        build_args=(
                    "--build-arg SENZING_APT_INSTALL_PACKAGE=senzingapi-runtime "
                    "--build-arg SENZING_APT_REPOSITORY_NAME=${SENZING_APT_REPO_PACKAGE} "
                    "--build-arg SENZING_APT_REPOSITORY_URL=https://${SENZING_APT_REPOSITORY} "
                    "--build-arg SENZING_APT_INSTALL_PACKAGE=senzingapi-runtime=${SENZING_RUNTIME_VERSION}"
                    )
        echo "[INFO] ./aws/docker-build.sh -a "$(printf '%s\n' "${build_args[*]}")" -t "senzing/senzingapi-runtime:staging""
        $CODEBUILD_SRC_DIR/aws/docker-build.sh -a "$(printf '%s\n' "${build_args[*]}")" \
                              -t "senzing/senzingapi-runtime:staging"

      # Build senzingapi-tools base image
      - |
        cd $CODEBUILD_SRC_DIR_senzingapi_tools
        build_args=(
                    "--build-arg BASE_IMAGE=senzing/senzingapi-runtime:staging "
                    "--build-arg SENZING_APT_INSTALL_TOOLS_PACKAGE=senzingapi-tools"
                    )
        $CODEBUILD_SRC_DIR/aws/docker-build.sh -a "$(printf '%s\n' "${build_args[*]}")" \
                              -t "senzing/senzingapi-tools:staging"

      - |
        declare -A repos
        repos=(["redoer"]="redoer" ["init-postgresql"]="init-postgresql" \
        ["senzing-poc-server"]="senzing-poc-server" ["docker-sshd"]=sshd ["stream-loader"]="stream-loader" \
        ["docker-xterm"]="xterm" ["sz_sqs_consumer"]="sz_sqs_consumer" ["sz_simple_redoer"]="sz_simple_redoer")

        for repo in "${!repos[@]}"; do

          # Codebuild doesn't support "-" in source identifier names
          cd $CODEBUILD_SRC_DIR_$(echo $repo | tr '-' '_')

          if [[ $repo =~ "xterm" || $repo =~ "sshd" ]]; then
            BASE="senzing/senzingapi-tools:staging"
          else
            BASE="senzing/senzingapi-runtime:staging"
          fi

          $CODEBUILD_SRC_DIR/aws/docker-build.sh -a "--build-arg BASE_IMAGE=${BASE}" \
                              -t "senzing/${repos[$repo]}:staging"

        done
